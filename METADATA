# generate this sort of template with:
# ~/bin/mtcheck ece1229/*.jl | tee x ; # say

sub juliaMeta
{
my @julia =
(
{
   DATE => 'Feb 17, 2015',
   path => 'ece1229/ps2/ps2p5.jl',
   WHAT => qq(Numerical calculations for ps2 p5 (simple).)
},
{
   DATE => 'Feb 22, 2015',
   path => 'ece1229/misc/eta.jl',
   WHAT => qq(Numerically compute the free space impedance to compare to 120 pi.)
},
{
   DATE => 'Mar 25, 2015',
   path => 'ece1229/misc/mycrappypolar.jl',
   WHAT => qq(A brute force polar plot before figuring out how to do it in PyPlot directly. )
},
{
   DATE => 'Mar 25, 2015',
   path => 'ece1229/ps4/p2.jl',
   WHAT => qq(A reimplementation of matlab/ece1229/ps4/p2.m in Julia.  Figure out how to do a polar plot and save it to a file.)
},
{
   DATE => 'Mar 25, 2015',
   path => 'ece1229/misc/pyplotPolarExample.jl',
   WHAT => qq(A variation of https://github.com/gizmaa/Julia_Examples/blob/master/pyplot_windrose.jl to try a Julia implementation of ps4/p2)
},
{
   DATE => 'Mar 26, 2015',
   path => 'ece1229/ps4/p4.jl',
   WHAT => qq(Calculation of the numeric values of the Chebyshev array coeffients, directivites, and plots.)
},
{
   DATE => 'Apr 28, 2015',
   path => 'ece1229/ps3/p2.jl',
   WHAT => qq(Log polar plot of finite length dipole power, to zoom in on the side lobes for the 1.25 case.)
},
{
   DATE => 'Apr 29, 2015',
   path => 'ece1229/ps3/p3.jl',
   WHAT => qq(Replot corner cube array factor in log scale.  Original polar and 3D plots were done in the ps3Q3plotsCorrected.nb Mathematica notebook.)
},
{
   DATE => 'Apr 30, 2015',
   path => 'ece1229/ps4/p2x.jl',
   WHAT => qq(Replot ps4 p2 function in linear and log scales, based on code from ps3/p3.jl)
},
) ; # @julia

   return @julia ;
}

1 ;
